node_id,name,description,type,order,link,python_cmds,output_path,output_info,folder_size,dependencies,api_keys_required,processing_time_est,data_sources,n8n_parallel_safe,rate_limited
eco_001,Economic Data Fetcher,Fetches economic data (Jobs Output Commodities) from USEEIO API for all US states,data_fetcher,1,research/economy,python JobsD+q-2csv.py,states/commodities/2020/,CSV files with economic indicators by state,207M,"numpy,pandas,requests,json",none,medium,USEEIO API (ModelEarth GitHub),yes,no
zip_001,Zipcode Metrics Generator,Generates zipcode metrics aggregated by industry level from Census ZBP API,data_processor,2,us/zipcodes,python zipcodes.py,us/zipcodes/,zipcodes{level}.csv with industry metrics,24K,"requests,pandas",none,fast,Census Bureau ZBP API,yes,yes
zip_002,Zipcode Range Processor,Retrieves NAICS data for zipcode ranges and creates hierarchical folder structure,data_processor,3,us/zipcodes,"python split_zip_data.py",us/zipcodes/naics/,Nested CSV files by zipcode and NAICS level,24K,"requests,pandas",none,slow,Census Bureau ZBP API,no,yes
zip_003,Single Zipcode Processor,Generates data for a single zipcode with hierarchical directory structure,data_processor,4,us/zipcodes,"single_zipcode(""zipcode"", level)",zipcode directories,Individual zipcode CSV files,24K,"requests,pandas",none,fast,Census Bureau ZBP API,yes,yes
naics_001,NAICS Timeline Aggregator,Aggregates NAICS data across years (2017-2020) to create timeline datasets,data_aggregator,5,timelines/prep/industries,python naics-timelines.py,../../../../community-timelines/industries/naics4/US/states/,Timeline CSV files by state,20K,"pandas,requests",none,medium,model.earth remote CSV files,yes,no
prep_001,ZCTA Data Automator,Generates SQL scripts for different years and processes ZCTA data (2012-2017),data_processor,6,timelines/prep/all,"python automate.py zcta.SQL.txt",output/{year}/,Year-specific ZCTA files and SQL scripts,1.0G,"pandas,sqlite3",none,slow,Local data files,no,no
prep_002,Zip Folder Structure Creator (2-level),Creates zip code folder structure with metadata files using CSV crosswalk,structure_creator,7,timelines/prep/all,"python zipgraph_2folders.py ../zipcodes/zcta/zip_to_zcta_2018.csv ../../../community-forecasting/data/zip/",zip folder hierarchy,zipinfo.md files in 2-level structure,1.0G,"pandas,os",none,medium,Zip-to-ZCTA crosswalk CSV,yes,no
prep_003,Zip Folder Structure Creator (5-level),Creates zip code folder structure using Excel crosswalk with 5-level hierarchy,structure_creator,8,timelines/prep/all,"python zipgraph.py ZIPCodetoZCTACrosswalk2022UDS.xlsx ../../zip/",zip folder hierarchy,Metadata files in 5-level folder structure,1.0G,"pandas,openpyxl",none,medium,2022 Zip-to-ZCTA Excel crosswalk,yes,no
ml_001,Random Forest Automator,Automates random forest analysis across multiple files for poverty prediction,ml_processor,9,timelines/prep/all/python,"python automateRF.py ""../input""",output/,{year}_random_forest_poverty.csv files,375M,"sklearn,pandas,numpy",none,slow,ZCTA input files,no,no
ml_002,Individual File Processor,Individual file processor for machine learning pipeline,ml_processor,10,timelines/prep/all/python,python runOneFile.py,output/,Processed ML-ready files,375M,"sklearn,pandas",none,fast,Individual ZCTA files,yes,no
ml_003,Poverty Predictor,Machine learning analysis for poverty prediction using multiple models,ml_processor,11,timelines/prep/all/python,python poverty.py,output/,Poverty prediction results,375M,"sklearn,pandas,numpy",none,medium,Community forecasting ZCTA data,yes,no
ml_004,Advanced Poverty Analysis,Advanced poverty analysis with subprocess automation,ml_processor,12,timelines/prep/all/python,python automate.Hpy.py,output/,Advanced analysis results,375M,"subprocess,sqlite3",none,slow,Multiple data sources,no,no
pov_001,ACS Poverty Data Cleaner,Cleans American Community Survey poverty data for years 2012-2017,data_cleaner,13,timelines/prep/all/input/poverty/python,python clean_data_script.py,../output/,Cleaned poverty CSV files,72K,"pandas,numpy",none,medium,ACS CSV files,yes,no
reg_001,Time Series Data Cleaner,Time series data cleaning and combination with projection capability,data_processor,14,timelines/prep/regression,python tscleanH.py,data/,combo_zcta_sm.csv and ts_zcta_sm.csv,79M,"pandas,numpy",none,medium,Multi-year ZCTA data,yes,no
reg_002,Zip Merger,Merges ZCTA data with zip code mappings for geographic integration,data_merger,15,timelines/prep/regression,"python mergezip.py <zip_to_zcta_file> <output_dir> <combo_file>",hierarchical zip structure,{zipcode}_projected.csv files,79M,"pandas,zipgraph",none,medium,Zip-to-ZCTA mapping and combo files,no,no
reg_003,ML Regressor,Machine learning pipeline for time series forecasting using LassoLarsCV,ml_processor,16,timelines/prep/regression,python regressor.py,output/,Forward-projected CSV files,79M,"sklearn,pandas,numpy",none,slow,Time series data,yes,no
train_001,ML Training Batch Processor,Automated batch processing for ML data generation across all US states (2017-2022),batch_processor,17,timelines/training/naics/python,python run.py,output/NAICS{level}/{year}/,Training datasets by state and year,76K,"subprocess,ML_data_generation",none,very_slow,Multiple geographic and census sources,no,yes
train_002,ML Data Generator,Generates comprehensive county-level training datasets with geographic and industry data,data_generator,18,timelines/training/naics/python,"python ML_data_generation.py <year> <state>",output/NAICS{level}/{year}/,County-level training CSV files,76K,"geopandas,geopy,censusdata,pandas",census_api,slow,Census data and geographic APIs,yes,yes
tab_001,CSV Timeline Merger,Timeline data aggregation for NAICS industries,data_aggregator,19,timelines/tabulator,python csv_merge.py,output/,Timeline CSV with NAICS as columns,36K,"pandas",none,fast,Model.earth community data,yes,no
trade_001,Comtrade Data Fetcher (Azure),Fetches trade data from UN Comtrade API using Azure authentication,api_fetcher,20,international/comtrade,python comtrade-script-azure.py,output/,Trade data CSV files,15M,"requests,pandas",comtrade_azure,medium,UN Comtrade API,yes,yes
trade_002,Movie Data Collector,Movie data collection from TheMovieDB API with similarity analysis,api_fetcher,21,international/comtrade,"python movie-script.py [API_KEY]",./,movie_ID_name.csv and movie_ID_sim_movie_ID.csv,15M,"requests,pandas",themoviedb,medium,TheMovieDB API,yes,yes
trade_003,Comtrade Data Fetcher (Basic),UN Comtrade data fetching and CSV generation without API key,api_fetcher,22,international/comtrade,"python comtrade-script.py nokey",./,row_ID_name.csv with trade data,15M,"requests,pandas",none,fast,UN Comtrade API (public),yes,yes